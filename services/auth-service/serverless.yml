service: hyperlocal-auth-service
frameworkVersion: '3'
useDotenv: true

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  region: ca-central-1
  runtime: nodejs18.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000'
    OAUTH_PUBLIC_KEY: 'dc85532ea539620c9feafc485d81a551e6a4a8a2cab7e755b5fd4d56cfdefe21'
    MONGO_URI: ${env:MONGO_URI}

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  auth:
    handler: src/handlers/auth.handler
  issueToken:
    handler: src/handlers/issueToken.handler
    events:
      - http:
          path: oauth/token
          method: POST
          cors: true
  publicEndpoint:
    handler: src/handlers/public.handler
    events:
      - http:
          path: public
          method: POST
          cors: true
  privateEndpoint:
    handler: src/handlers/private.handler
    events:
      - http:
          path: private
          method: POST
          authorizer: auth
          cors: true

package:
  individually: true

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: 'node18'
    platform: 'node'
    concurrency: 10
